import React from "react";
import { Check, Search } from "lucide-react";
import { Link, useLoaderData, useNavigation } from "react-router-dom";

import { toast } from "@/hooks/use-toast";
import { CreateImage } from "@/components/create-image-dialog";
import { PostDialog } from "@/components/post-dialog";
import { HeroSkeleton } from "@/components/skeletons/hero";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { ToastAction } from "@/components/ui/toast";
import {
  Tooltip,
  TooltipContent,
  TooltipTrigger,
} from "@/components/ui/tooltip";

export default function HomePage() {
  const [query, setQuery] = React.useState("");

  const data = useLoaderData();
  const { state } = useNavigation();

  function filterPosts(posts) {
    if (!query) return posts;

    return posts.filter(
      (post) =>
        post.name.toLowerCase().includes(query.toLowerCase()) ||
        post.prompt.toLowerCase().includes(query.toLowerCase())
    );
  }

  async function copyPrompt(prompt) {
    await navigator.clipboard.writeText(prompt);
    toast({
      title: (
        <>
          <Check className="inline-block mr-2 h-5 w-5 text-green-500" /> Copied!
        </>
      ),
      description: "The prompt has been copied to your clipboard.",
      action: (
        <ToastAction altText="Create" asChild>
          <Link to="/create">Create</Link>
        </ToastAction>
      ),
    });
  }

  return (
    <main className="container flex flex-col items-center gap-6 md:gap-20 p-4 md:p-8">
      <header className="md:mt-16 mt-4 space-y-2">
        <h1 className="mt-4 font-heading text-4xl font-bold animate-in slide-in-from-bottom-1/2 zoom-in-50 text-center [text-shadow:_0_4px_0_#e1e1e1] dark:bg-gradient-to-br dark:from-foreground dark:to-gray-500 dark:bg-clip-text dark:text-transparent dark:[text-shadow:none] md:text-5xl lg:text-6xl xl:text-7xl duration-500 fade-in-25">
          The Community Showcase
        </h1>

        <p className="font-medium md:max-w-lg text-center mx-auto text-muted-foreground md:text-lg animate-in duration-500 zoom-in-50 fade-in-0">
          Browse through a collection of imaginative and visually stunning
          images generated by Imaginary.
        </p>
      </header>

      <div className="flex flex-1 justify-end gap-4 md:hidden">
        <CreateImage />

        <Button
          variant="outline"
          className="shadow"
          onClick={() =>
            toast({
              title: "Coming soon",
              description: "This feature is not available yet!",
            })
          }
        >
          Create Video
        </Button>
      </div>

      <div className="relative w-full max-w-lg animate-in zoom-in-50 fade-in-25 [animation-duration:500ms]">
        <Search className="absolute left-3 inset-y-0 my-auto h-5 w-5 text-muted-foreground" />
        <Input
          value={query}
          onChange={(e) => setQuery(e.target.value)}
          placeholder="Search Posts"
          className="shadow-sm hover:shadow-md transition-shadow rounded-full pl-10 h-12"
        />
      </div>

      {state === "loading" && <HeroSkeleton />}

      <section className="grid xl:grid-cols-4 lg:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-4">
        {filterPosts(data?.data ?? []).map(({ _id, name, photo, prompt }) => (
          <figure key={_id} className="space-y-2">
            <PostDialog name={name} photo={photo} prompt={prompt}>
              {/* dialog trigger */}
              <div className="rounded-lg shadow border hover:shadow-lg p-0.5 transition duration-300 group overflow-hidden hover:-translate-y-1">
                <img
                  src={photo}
                  className="object-cover aspect-video w-full rounded-lg group-hover:scale-105 duration-300 delay-300 ease-in"
                />
              </div>
            </PostDialog>

            <figcaption className="flex gap-2">
              <div className="h-9 w-9 rounded-full bg-muted flex items-center justify-center shrink-0 shadow uppercase">
                {name[0]}
              </div>

              <Tooltip>
                <TooltipTrigger
                  className="relative group flex items-center"
                  onClick={() => copyPrompt(prompt)}
                >
                  <div className="inline-flex flex-1 relative py-1 px-3 rounded-2xl bg-muted shadow">
                    <span className="text-sm text-left line-clamp-1 text-ellipsis">
                      {prompt}
                    </span>

                    <svg
                      width="13"
                      height="14"
                      className="absolute left-[-5.5px] bottom-[0.246px]"
                    >
                      <path
                        className="fill-muted"
                        d="M6 .246c-.175 5.992-1.539 8.89-5.5 13.5 6.117.073 9.128-.306 12.5-3L6 .246Z"
                      />
                    </svg>
                  </div>
                </TooltipTrigger>

                <TooltipContent>Copy Prompt</TooltipContent>
              </Tooltip>
            </figcaption>
          </figure>
        ))}
      </section>
    </main>
  );
}
